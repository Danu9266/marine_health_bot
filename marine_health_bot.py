from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext

products = {
    "Kinkou Balance": "https://www.marinehealth.asia/kk/products/kinkou-balance",
    "MH Collagen": "https://www.marinehealth.asia/kk/products/collagen",
    "Cardio Marine": "https://www.marinehealth.asia/kk/products/cardio-marine",
    "Indium kelp": "https://www.marinehealth.asia/kk/products/iodium-kelp",
    "Premium Squalene": "https://www.marinehealth.asia/kk/products/premium-squalene",
    "Artromarine": "https://www.marinehealth.asia/kk/products/artro-marine-msm",
    "Ashitaba": "https://www.marinehealth.asia/kk/products/ashitaba",
    "Spirulina-jar": "https://www.marinehealth.asia/kk/products/spirulina-jar",
    "Zostera": "https://www.marinehealth.asia/kk/products/zostera",
    "Vita Marine B": "https://www.marinehealth.asia/kk/products/vita-marine-b",
    "Vita Marine A": "https://www.marinehealth.asia/kk/products/vita-marine-a"
}

quiz_questions = [
    {"question": "1. –°–∞“ì–∞–Ω –∫–æ–º–∞–Ω–¥–∞–¥–∞ –∂“±–º—ã—Å —ñ—Å—Ç–µ–≥–µ–Ω “±–Ω–∞–π –º–∞?", "options": ["–ò”ô", "–ñ–æ“õ"], "scores": [1, 0]},
    {"question": "2. ”®–∑ –±–∏–∑–Ω–µ—Å—ñ“£ –±–æ–ª“ì–∞–Ω—ã–Ω “õ–∞–ª–∞–π—Å—ã“£ –±–∞?", "options": ["–ò”ô", "–ñ–æ“õ"], "scores": [1, 0]},
    {"question": "3. –ñ–∞“£–∞ –Ω”ô—Ä—Å–µ–ª–µ—Ä–¥—ñ “Ø–π—Ä–µ–Ω—É–≥–µ –¥–∞–π—ã–Ω—Å—ã“£ –±–∞?", "options": ["–ò”ô", "–ñ–æ“õ"], "scores": [1, 0]},
    {"question": "4. –ê–¥–∞–º–¥–∞—Ä–º–µ–Ω —Å”©–π–ª–µ—Å–∫–µ–Ω–¥–µ ”©–∑—ñ“£–¥—ñ —Å–µ–Ω—ñ–º–¥—ñ —Å–µ–∑—ñ–Ω–µ—Å—ñ“£ –±–µ?", "options": ["–ò”ô", "–ñ–æ“õ"], "scores": [1, 0]},
    {"question": "5. “ö–∏—ã–Ω–¥—ã“õ—Ç–∞—Ä–¥–∞–Ω “õ–æ—Ä—ã“õ–ø–∞–π—Å—ã“£ –±–∞?", "options": ["–ò”ô", "–ñ–æ“õ"], "scores": [1, 0]},
    {"question": "6. –°–µ—Ç–µ–≤–æ–π“ì–∞ –∫”©–∑“õ–∞—Ä–∞—Å—ã“£ “õ–∞–Ω–¥–∞–π?", "options": ["–ñ–∞“õ—Å—ã", "–ñ–∞–º–∞–Ω"], "scores": [1, 0]},
    {"question": "7. “ö–æ—Å—ã–º—à–∞ —Ç–∞–±—ã—Å –∫”©–∑—ñ–Ω —ñ–∑–¥–µ–ø –∂“Ø—Ä—Å—ñ“£ –±–µ?", "options": ["–ò”ô", "–ñ–æ“õ"], "scores": [1, 0]},
    {"question": "8. –ö”©—à–±–∞—Å—à—ã –±–æ–ª—É–¥—ã “õ–∞–ª–∞–π—Å—ã“£ –±–∞?", "options": ["–ò”ô", "–ñ–æ“õ"], "scores": [1, 0]},
    {"question": "9. –£–∞“õ—ã—Ç—ã“£–¥—ã ”©–∑—ñ“£ –±–∞—Å“õ–∞—Ä“ì—ã“£ –∫–µ–ª–µ –º–µ?", "options": ["–ò”ô", "–ñ–æ“õ"], "scores": [1, 0]},
    {"question": "10. ”ò–ª–µ—É–º–µ—Ç—Ç—ñ–∫ –∂–µ–ª—ñ–¥–µ –±–µ–ª—Å–µ–Ω–¥—ñ—Å—ñ“£ –±–µ?", "options": ["–ò”ô", "–ñ–æ“õ"], "scores": [1, 0]},
    {"question": "11. “ö–∏—ã–Ω–¥—ã“õ—Ç–∞—Ä“ì–∞ “õ–∞—Ä–∞–º–∞—Å—Ç–∞–Ω ”ô—Ä–µ–∫–µ—Ç –µ—Ç–µ—Å—ñ“£ –±–µ?", "options": ["–ò”ô", "–ñ–æ“õ"], "scores": [1, 0]},
    {"question": "12. ”®–º—ñ—Ä—ñ“£–¥—ñ ”©–∑–≥–µ—Ä—Ç–∫—ñ“£ –∫–µ–ª–µ –º–µ?", "options": ["–ò”ô", "–ñ–æ“õ"], "scores": [1, 0]},
    {"question": "13. –ê–¥–∞–º–¥–∞—Ä“ì–∞ –∫”©–º–µ–∫—Ç–µ—Å–∫–µ–Ω–¥—ñ “±–Ω–∞—Ç–∞—Å—ã“£ –±–∞?", "options": ["–ò”ô", "–ñ–æ“õ"], "scores": [1, 0]},
    {"question": "14. –ë–æ—Å —É–∞“õ—ã—Ç—ã“£–¥–∞ –∞“õ—à–∞ —Ç–∞–ø“õ—ã“£ –∫–µ–ª–µ –º–µ?", "options": ["–ò”ô", "–ñ–æ“õ"], "scores": [1, 0]},
    {"question": "15. –¢–∞–±—ã—Å—Ç—ã –∞–¥–∞–º–¥–∞—Ä–º–µ–Ω –±—ñ—Ä–≥–µ –±–æ–ª“ì—ã“£ –∫–µ–ª–µ –º–µ?", "options": ["–ò”ô", "–ñ–æ“õ"], "scores": [1, 0]}
]

user_data = {}

def main_menu_keyboard():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üåø ”®–Ω—ñ–º–¥–µ—Ä —Ç—É—Ä–∞–ª—ã –∞“õ–ø–∞—Ä–∞—Ç", callback_data='products')],
        [InlineKeyboardButton("‚ùì –°–µ—Ç–µ–≤–æ–π –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞—Å—ã", callback_data='quiz')],
        [InlineKeyboardButton("üì≤ –ú–µ–Ω–µ–¥–∂–µ—Ä–º–µ–Ω –±–∞–π–ª–∞–Ω—ã—Å—É", url='wa.me/77084828209')],
        [InlineKeyboardButton(" üó£ ”®–Ω—ñ–º –æ—Ç–∑—ã–≤—Ç–∞—Ä—ã", url='https://t.me/OtzivMarineHealth')],
    ])

def start(update: Update, context: CallbackContext):
    update.message.reply_text(
        "“ö–æ—à –∫–µ–ª–¥—ñ“£, Marine Health –±–æ—Ç—ã–Ω–∞!\n\n–ú—ã–Ω–∞ –±”©–ª—ñ–º–¥–µ—Ä–¥–µ–Ω —Ç–∞“£–¥–∞:",
        reply_markup=main_menu_keyboard()
    )

def button_handler(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    chat_id = query.message.chat.id

    if query.data == 'products':
        buttons = [[InlineKeyboardButton(name, url=link)] for name, link in products.items()]
        buttons.append([InlineKeyboardButton("üîô –ê—Ä—Ç“õ–∞", callback_data='back_to_main')])
        query.edit_message_text("”®–Ω—ñ–º–¥–µ—Ä —Ç—ñ–∑—ñ–º—ñ:", reply_markup=InlineKeyboardMarkup(buttons))

    elif query.data == 'quiz':
        user_data[chat_id] = {'score': 0, 'q_index': 0}
        send_quiz_question(update, context)

    elif query.data.startswith('answer_'):
        index = int(query.data.split('_')[1])
        current_q = user_data[chat_id]['q_index']
        user_data[chat_id]['score'] += quiz_questions[current_q]['scores'][index]
        user_data[chat_id]['q_index'] += 1

        if user_data[chat_id]['q_index'] < len(quiz_questions):
            send_quiz_question(update, context)
        else:
            total = user_data[chat_id]['score']
            if total >= 12:
                result = "–°–µ–Ω –∫–µ—Ä–µ–º–µ—Ç –∫”©—à–±–∞—Å—à—ã—Å—ã“£! –°–µ—Ç–µ–≤–æ–π –±–∏–∑–Ω–µ—Å–∫–µ –¥–∞–π—ã–Ω—Å—ã“£! üí™"
            elif total >= 6:
                result = "–°–µ–Ω—ñ“£ ”ô–ª–µ—É–µ—Ç—ñ“£ –±–∞—Ä! –ë–∞—Ä–ª—ã“ì—ã “Ø–π—Ä–µ–Ω—É–≥–µ –±–æ–ª–∞–¥—ã. ‚ú®"
            else:
                result = "–°–µ–Ω—ñ“£ “õ—ã–∑—ã“ì—É—à—ã–ª—ã“ì—ã“£ —Ç”©–º–µ–Ω —Å–∏—è“õ—Ç—ã. –ë—ñ—Ä–∞“õ –º“Ø–º–∫—ñ–Ω–¥—ñ–∫—Ç–µ—Ä —à–µ–∫—Å—ñ–∑! üå±"
            query.edit_message_text(
                f"‚úÖ –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∞—è“õ—Ç–∞–ª–¥—ã!\n–°—ñ–∑–¥—ñ“£ “±–ø–∞–π—ã“£—ã–∑: {total}/15\n\n{result}",
                reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üîô –ë–∞—Å—Ç—ã –±–µ—Ç", callback_data='back_to_main')]])
            )

    elif query.data == 'back_to_main':
        query.edit_message_text(
            "“ö–æ—à –∫–µ–ª–¥—ñ“£, Marine Health –±–æ—Ç—ã–Ω–∞!\n\n–ú—ã–Ω–∞ –±”©–ª—ñ–º–¥–µ—Ä–¥–µ–Ω —Ç–∞“£–¥–∞:",
            reply_markup=main_menu_keyboard()
        )

def send_quiz_question(update: Update, context: CallbackContext):
    query = update.callback_query
    chat_id = query.message.chat.id
    q_index = user_data[chat_id]['q_index']
    question = quiz_questions[q_index]['question']
    options = quiz_questions[q_index]['options']
    buttons = [[InlineKeyboardButton(opt, callback_data=f"answer_{i}")] for i, opt in enumerate(options)]
    query.edit_message_text(question, reply_markup=InlineKeyboardMarkup(buttons))

def main():
    TOKEN = "7602120627:AAEkBULB7fVvBNF1QzoWjKqYBmFiADPAdfk"  # ‚Üê ”®–∑ —Ç–æ–∫–µ–Ω—ñ“£—ñ–∑–¥—ñ –æ—Å—ã–Ω–¥–∞ “õ–æ–π—ã“£—ã–∑
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CallbackQueryHandler(button_handler))
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
